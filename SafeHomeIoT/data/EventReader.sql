###########SENSORS#################
DROP DATABASE  IF EXISTS EventReader;
CREATE DATABASE IF NOT EXISTS EventReader;
USE EventReader;

DROP TABLE IF EXISTS temperatureMessage;
CREATE TABLE temperatureMessage (
	ID INT AUTO_INCREMENT, 
	SIMCARD LONG,
	MSISDN LONG,
	measurement DOUBLE,
	type VARCHAR(30),
	ts TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY(ID)
);

DROP TABLE IF EXISTS imageMessage;
CREATE TABLE imageMessage (
	ID INT AUTO_INCREMENT, 
	SIMCARD LONG,
	MSISDN LONG,
	description VARCHAR(30),
	type VARCHAR(30),
	ts TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY(ID)
);

DROP TABLE IF EXISTS videoMessage;
CREATE TABLE videoMessage (
	ID INT AUTO_INCREMENT, 
	SIMCARD LONG,
	MSISDN LONG,
	description VARCHAR(30),
	type VARCHAR(30),
	ts TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY(ID)
);

DROP TABLE IF EXISTS smokeMessage;
CREATE TABLE smokeMessage (
	ID INT AUTO_INCREMENT, 
	SIMCARD LONG,
	MSISDN LONG,
	measurement DOUBLE,
	type VARCHAR(30),
	ts TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY(ID)
);

DROP TABLE IF EXISTS motionMessage;
CREATE TABLE motionMessage (
	ID INT AUTO_INCREMENT, 
	SIMCARD LONG,
	MSISDN LONG,
	description VARCHAR(30),
	type VARCHAR(30),
	ts TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY(ID)
);

USE EventReader;
DROP TABLE IF EXISTS Alarm;
CREATE TABLE Alarm (
    ID INT AUTO_INCREMENT,
    SIMCARD INT,
    type VARCHAR(30),
    customerId INT,
    ts TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (ID)
);

select * from temperatureMessage;
SELECT 
	description, COUNT(description) FROM videoMessage WHERE SIMCARD=383864374 GROUP BY description ORDER BY COUNT(description) DESC LIMIT 1;
SELECT description, COUNT(description) AS value_occurrence FROM videoMessage WHERE SIMCARD=383864374 GROUP BY description ORDER BY value_occurrence ASC LIMIT 1;